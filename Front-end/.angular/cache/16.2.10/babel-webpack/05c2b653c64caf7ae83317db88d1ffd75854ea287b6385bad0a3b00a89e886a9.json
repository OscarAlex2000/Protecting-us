{"ast":null,"code":"import { Injectable } from '@angular/core';\nimport { tap } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../auth/services/auth.service\";\nimport * as i2 from \"@angular/router\";\nexport let ValidarTokenGuard = /*#__PURE__*/(() => {\n  class ValidarTokenGuard {\n    constructor(authService, router) {\n      this.authService = authService;\n      this.router = router;\n    }\n    canActivate() {\n      return this.authService.validarToken().pipe(tap(valid => {\n        if (!valid) {\n          this.router.navigateByUrl('/auth');\n        }\n      }));\n    }\n    canLoad() {\n      return this.authService.validarToken().pipe(tap(valid => {\n        if (!valid) {\n          this.router.navigateByUrl('/auth');\n        }\n      }));\n    }\n    static #_ = this.ɵfac = function ValidarTokenGuard_Factory(t) {\n      return new (t || ValidarTokenGuard)(i0.ɵɵinject(i1.AuthService), i0.ɵɵinject(i2.Router));\n    };\n    static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: ValidarTokenGuard,\n      factory: ValidarTokenGuard.ɵfac,\n      providedIn: 'root'\n    });\n  }\n  return ValidarTokenGuard;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ValidarTokenGuard, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], () => [{\n    type: i1.AuthService\n  }, {\n    type: i2.Router\n  }], null);\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}