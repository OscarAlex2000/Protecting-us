{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component, ViewChild } from '@angular/core';\nimport * as mapboxgl from 'mapbox-gl';\nlet MapComponent = class MapComponent {\n  constructor() {\n    this.zoomLevel = 16;\n    // center: [number, number] = [ -102.76457, 20.81449 ];\n    this.center = [-102.78239, 20.847367];\n    // Arreglo de marcadores\n    this.marcadores = [];\n  }\n  ngAfterViewInit() {\n    this.mapa = new mapboxgl.Map({\n      container: this.divMapa.nativeElement,\n      style: 'mapbox://styles/mapbox/streets-v11',\n      center: this.center,\n      zoom: this.zoomLevel\n    });\n    this.leerLocalStorage();\n    // const markerHtml: HTMLElement = document.createElement('div');\n    // markerHtml.innerHTML = 'Hola Mundo';\n    // new mapboxgl.Marker()\n    //   .setLngLat( this.center )\n    //   .addTo( this.mapa );\n  }\n\n  agregarMarcador() {\n    // const color = \"#xxxxxx\".replace(/x/g, y=>(Math.random()*16|0).toString(16));\n    const color = \"#FF0000\";\n    const nuevoMarcador = new mapboxgl.Marker({\n      draggable: true,\n      color\n    }).setLngLat(this.center).addTo(this.mapa);\n    this.marcadores.push({\n      color,\n      marker: nuevoMarcador\n    });\n    this.guardarMarcadoresLocalStorage();\n    nuevoMarcador.on('dragend', () => {\n      this.guardarMarcadoresLocalStorage();\n    });\n  }\n  irMarcador(marker) {\n    this.mapa.flyTo({\n      center: marker.getLngLat()\n    });\n  }\n  guardarMarcadoresLocalStorage() {\n    const lngLatArr = [];\n    this.marcadores.forEach(m => {\n      const color = m.color;\n      const {\n        lng,\n        lat\n      } = m.marker.getLngLat();\n      lngLatArr.push({\n        color: color,\n        centro: [lng, lat]\n      });\n    });\n    localStorage.setItem('marcadores', JSON.stringify(lngLatArr));\n  }\n  leerLocalStorage() {\n    if (!localStorage.getItem('marcadores')) {\n      return;\n    }\n    const lngLatArr = JSON.parse(localStorage.getItem('marcadores'));\n    lngLatArr.forEach(m => {\n      const newMarker = new mapboxgl.Marker({\n        color: m.color,\n        draggable: true\n      }).setLngLat(m.centro).addTo(this.mapa);\n      this.marcadores.push({\n        marker: newMarker,\n        color: m.color\n      });\n      newMarker.on('dragend', () => {\n        this.guardarMarcadoresLocalStorage();\n      });\n    });\n  }\n  borrarMarcador(i) {\n    this.marcadores[i].marker?.remove();\n    this.marcadores.splice(i, 1);\n    this.guardarMarcadoresLocalStorage();\n  }\n};\n__decorate([ViewChild('mapa')], MapComponent.prototype, \"divMapa\", void 0);\nMapComponent = __decorate([Component({\n  selector: 'app-map',\n  templateUrl: './map.component.html',\n  styles: [`\n    .mapa-container {\n      height: 100%;\n      width: 100%; \n    }\n\n    .list-group {\n      position: fixed;\n      top: 100px;\n      right: 20px;\n      z-index: 99;\n    }\n    \n    li {\n      cursor: pointer;\n    }\n    `]\n})], MapComponent);\nexport { MapComponent };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}